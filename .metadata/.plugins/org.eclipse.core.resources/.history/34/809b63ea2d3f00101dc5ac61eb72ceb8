package chatbotorioai;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class Database {
    // Configurações para conexão MySQL
    private static final String URL = "jdbc:mysql://localhost:3306/orioai?useSSL=false&serverTimezone=UTC";
    private static final String USER = "root";       // Troque para seu usuário do MySQL
    private static final String PASSWORD = "senha";  // Troque para sua senha do MySQL

    // Retorna conexão ativa
    public static Connection connect() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }

    // Inicializar Banco de Dados (opcional, se o schema não existir)
    public static void inicializarBanco() {
        try (Connection conn = connect();
             Statement stmt = conn.createStatement()) {

            // Cria as tabelas se não existirem
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS paciente (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "nome VARCHAR(100) NOT NULL," +
                    "cpf VARCHAR(11) UNIQUE NOT NULL," +
                    "telefone VARCHAR(15) NOT NULL," +
                    "email VARCHAR(100) NOT NULL," +
                    "nascimento DATE NOT NULL" +
                    ")");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS endereco (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "paciente_id INT NOT NULL," +
                    "rua VARCHAR(100) NOT NULL," +
                    "numero VARCHAR(10) NOT NULL," +
                    "bairro VARCHAR(50) NOT NULL," +
                    "cidade VARCHAR(50) NOT NULL," +
                    "estado VARCHAR(2) NOT NULL," +
                    "cep VARCHAR(10) NOT NULL," +
                    "FOREIGN KEY (paciente_id) REFERENCES paciente(id) ON DELETE CASCADE" +
                    ")");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS plano_saude (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "paciente_id INT NOT NULL," +
                    "nome VARCHAR(100) NOT NULL," +
                    "numero_cartao VARCHAR(50) NOT NULL," +
                    "validade DATE NOT NULL," +
                    "FOREIGN KEY (paciente_id) REFERENCES paciente(id) ON DELETE CASCADE" +
                    ")");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS historico_medico (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "paciente_id INT NOT NULL," +
                    "diagnostico TEXT," +
                    "tratamentos TEXT," +
                    "exames_realizados TEXT," +
                    "FOREIGN KEY (paciente_id) REFERENCES paciente(id) ON DELETE CASCADE" +
                    ")");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS triagem (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "sintomas_relato TEXT NOT NULL," +
                    "nivel_prioridade VARCHAR(10) NOT NULL," +
                    "mensagem_id INT" +
                    ")");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS especialidade (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "nome VARCHAR(100) NOT NULL" +
                    ")");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS agendamento (" +
                    "id INT AUTO_INCREMENT PRIMARY KEY," +
                    "paciente_id INT NOT NULL," +
                    "data_consulta DATE NOT NULL," +
                    "hora_consulta TIME NOT NULL," +
                    "FOREIGN KEY (paciente_id) REFERENCES paciente(id) ON DELETE CASCADE" +
                    ")");

            System.out.println("Banco de dados MySQL inicializado com sucesso!");
        } catch (SQLException e) {
            System.err.println("Erro ao inicializar banco MySQL: " + e.getMessage());
        }
    }
}
